/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.dlpu.eva.struts.action;

import hibernate.Notice;

import javax.persistence.Entity;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.dlpu.eva.service.NoticeService;
import com.dlpu.eva.struts.form.NoticeForm;

/** 
 * MyEclipse Struts
 * Creation date: 10-28-2014
 * 
 * XDoclet definition:
 * @struts.action path="/noticechange" name="noticeForm" scope="request"
 */
@Entity
public class NoticechangeAction extends Action {
	/*
	 * Generated Methods
	 */
	private static final String SUCCESS = "success";
	private static final String ERROR = "error";
	private static final String DERROR = "dataerror";
	private static final String FISUCCES = "fsuccess";

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) {
		NoticeForm noticeForm = (NoticeForm) form;
		Object s = request.getSession().getAttribute("adminuser");
		if (s == null) {// ��ֹ����
			return mapping.findForward(ERROR);
		}

		String id = request.getParameter("id");
		if (id == null) {// ��ֹ����
			return mapping.findForward(ERROR);
		}
		
		NoticeService ns = new NoticeService();
		Notice n = new Notice();
		Notice orgn = ns.getOneNotice(id).getNotice();
		
		n.setNoticeid(id);
		n.setNoticetime(orgn.getNoticetime());
		n.setNoticetitle(noticeForm.getNoticetitle());
		n.setNoticecontent(noticeForm.getMytext());
		n.setNoticetype(orgn.getNoticetype());
		
		String e = request.getParameter("e");
		if(e == null){
			e = "1";
		}
		
		if(ns.UpdateOneNotice(n)){
			request.getSession().setAttribute("noticeid", n.getNoticeid());
			if(e.equals("1")){
				return mapping.findForward(SUCCESS);
			}else{
				return mapping.findForward(FISUCCES);
			}
		}else{
			return mapping.findForward(DERROR);
		}
		
	}
}