/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.dlpu.eva.struts.action;


import hibernate.Noticefile;


import javax.persistence.Entity;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.dlpu.eva.file.FileNameFactory;
import com.dlpu.eva.file.FileOperate;
import com.dlpu.eva.service.GetSourceUrlService;
import com.dlpu.eva.service.NoticeService;
import com.dlpu.eva.struts.form.NoticefileuploadForm;
import com.dlpu.eva.time.GetSystemTime;

/** 
 * MyEclipse Struts
 * Creation date: 10-27-2014
 * 
 * XDoclet definition:
 * @struts.action validate="true"
 */
@Entity
public class NoticefileupAction extends Action {
	/*
	 * Generated Methods
	 */
	private static final String SUCCESS = "success";
	private static final String ERROR = "error";
	private static final String FERROR = "fileerror";
	private static final String DERROR = "dataerror";

	/** 
	 * Method execute
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) {
		String noticeid = request.getSession().getAttribute("noticeid").toString();
		NoticefileuploadForm nff = (NoticefileuploadForm)form;
		
		Object s = request.getSession().getAttribute("adminuser");
		if (s == null) {// ��ֹ����
			return mapping.findForward(ERROR);
		}

		NoticeService ns = new NoticeService();
		Noticefile nf = new Noticefile();

		// ��ȡ��ǰϵͳʱ��(��ȷ����)��Ϊ���ű��
		GetSystemTime gst = new GetSystemTime();
		String lt = gst.GetFullTimeSQLHelper();
		
		nf.setNoticefileid(lt);
		nf.setNoticeid(noticeid);
		nf.setNoticetitle(nff.getFiletitle());
		String filenameString = nff.getThefile().getFileName();
		if (filenameString != null && !filenameString.equals("")) {
			FileNameFactory fnf = new FileNameFactory();
			filenameString = fnf.changeFileName(lt, filenameString);
			if (filenameString == null) {
				return mapping.findForward(FERROR);
			}
		}
		nf.setNoticeurl(filenameString);
		if (nf.getNoticeurl() != null && !nf.getNoticeurl().equals("")) {// ����и������ϴ���Ƭ
			GetSourceUrlService gsus = new GetSourceUrlService();
			FileOperate fo = new FileOperate();
			if (!fo.AddOneFile(gsus.GetNoticeFileUrl(), nf.getNoticeurl(), nff.getThefile())) {
				return mapping.findForward(FERROR);
			}
		}
		if (ns.AddOneNoticeFile(nf)) {
			return mapping.findForward(SUCCESS);
		} else {
			return mapping.findForward(DERROR);
		}
	}
}