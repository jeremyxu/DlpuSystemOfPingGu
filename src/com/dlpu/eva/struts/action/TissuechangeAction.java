/*
 * Generated by MyEclipse Struts
 * Template path: templates/java/JavaClass.vtl
 */
package com.dlpu.eva.struts.action;

import hibernate.Tissue;

import javax.persistence.Entity;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.apache.struts.action.Action;
import org.apache.struts.action.ActionForm;
import org.apache.struts.action.ActionForward;
import org.apache.struts.action.ActionMapping;

import com.dlpu.eva.file.FileNameFactory;
import com.dlpu.eva.file.FileOperate;
import com.dlpu.eva.service.GetSourceUrlService;
import com.dlpu.eva.service.TissueService;
import com.dlpu.eva.struts.form.TissuechangeForm;

/**
 * MyEclipse Struts Creation date: 10-28-2014
 * 
 * XDoclet definition:
 * 
 * @struts.action path="/tissuechange" name="tissuechangeForm" scope="request"
 */
@Entity
public class TissuechangeAction extends Action {
	/*
	 * Generated Methods
	 */
	private static final String SUCCESS = "success";
	private static final String ERROR = "error";
	private static final String FERROR = "fileerror";
	private static final String DERROR = "dataerror";

	/**
	 * Method execute
	 * 
	 * @param mapping
	 * @param form
	 * @param request
	 * @param response
	 * @return ActionForward
	 */
	public ActionForward execute(ActionMapping mapping, ActionForm form, HttpServletRequest request, HttpServletResponse response) {
		TissuechangeForm tissuechangeForm = (TissuechangeForm) form;
		Object s = request.getSession().getAttribute("adminuser");
		if (s == null) {// ��ֹ����
			return mapping.findForward(ERROR);
		}

		TissueService ts = new TissueService();
		Tissue t1 = ts.getTissue1();
		Tissue t2 = ts.getTissue2();
		Tissue t3 = ts.getTissue3();

		t1.setTissuetitle(tissuechangeForm.getThetitle1());
		t2.setTissuetitle(tissuechangeForm.getThetitle2());
		t3.setTissuetitle(tissuechangeForm.getThetitle3());

		String filename1 = tissuechangeForm.getThefile1().getFileName();
		String filename2 = tissuechangeForm.getThefile2().getFileName();
		String filename3 = tissuechangeForm.getThefile3().getFileName();

		FileNameFactory fnf = new FileNameFactory();
		GetSourceUrlService gsus = new GetSourceUrlService();
		FileOperate fo = new FileOperate();
		if (!t1.getTissueimg().equals(filename1)) {
			filename1 = fnf.changeFileName("1", filename1);
			if (filename1 == null) {
				return mapping.findForward(FERROR);
			}
			fo.DelOneFile(gsus.GetTissuefileURL(), t1.getTissueimg(), false);// ɾ��ԭ���ĸ���
			if (!fo.AddOneFile(gsus.GetTissuefileURL(), filename1, tissuechangeForm.getThefile1())) {
				return mapping.findForward(FERROR);
			}
			t1.setTissueimg(filename1);
		}
		if (!t2.getTissueimg().equals(filename2)) {
			filename2 = fnf.changeFileName("2", filename2);
			if (filename2 == null) {
				return mapping.findForward(FERROR);
			}
			fo.DelOneFile(gsus.GetTissuefileURL(), t2.getTissueimg(), false);// ɾ��ԭ���ĸ���
			if (!fo.AddOneFile(gsus.GetTissuefileURL(), filename2, tissuechangeForm.getThefile2())) {
				return mapping.findForward(FERROR);
			}
			t2.setTissueimg(filename2);
		}
		if (!t3.getTissueimg().equals(filename3)) {
			filename3 = fnf.changeFileName("3", filename3);
			if (filename3 == null) {
				return mapping.findForward(FERROR);
			}
			fo.DelOneFile(gsus.GetTissuefileURL(), t3.getTissueimg(), false);// ɾ��ԭ���ĸ���
			if (!fo.AddOneFile(gsus.GetTissuefileURL(), filename3, tissuechangeForm.getThefile3())) {
				return mapping.findForward(FERROR);
			}
			t3.setTissueimg(filename3);
		}

		if (ts.UpdateTissue(t1) && ts.UpdateTissue(t2) && ts.UpdateTissue(t3)) {
			return mapping.findForward(SUCCESS);
		} else {
			return mapping.findForward(DERROR);
		}
	}
}